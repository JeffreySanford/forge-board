/* You can add global styles to this file, and also import other style files */

// Angular Material Theming (if you have one, it should come first or early)
// @use '@angular/material' as mat;
// @include mat.core();
// $my-theme: mat.define-light-theme(( ... ));
// @include mat.all-component-themes($my-theme);

// Import shared partials
@use 'app/styles/variables' as *; // Make variables globally available with a namespace or directly
@use 'app/styles/utilities'; // Apply utility classes and placeholders

// Reset or Base Styles (optional)
html, body {
  height: 100%;
  margin: 0;
  font-family: $font-family-primary; // Use variable
  background-color: $background-light; // Example global background
  color: $text-color-dark; // Example global text color
}

// Other global styles can go here
// For example, global link styling, typography defaults, etc.

// Example of using a variable
// body {
//   background-color: $background-dark;
//   color: $text-color-light;
// }

// Define primary variables
$primary: #3498db;
$secondary: #2ecc71;
$accent: #e74c3c;
$background-color: #ffffff;
$translucent-overlay: rgba(0, 0, 0, 0.1);

// Global styles
body {
    // background-color: $background-color;  // Remove or comment out this line
    color: $primary;
}

// Buttons
button {
    background-color: $primary;
    color: $background-color;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;

    &:hover {
        background-color: $secondary;
        transform: scale(1.05);
    }

    &:active {
        background-color: $accent;
    }
}

// Translucent overlay
.overlay {
    background-color: $translucent-overlay;
    backdrop-filter: blur(5px);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;
}

// Animations
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.fade-in {
    animation: fadeIn 0.5s ease-in-out;
}

/* Ensure all containers fit within their parents */
.container-fluid,
.row,
.col,
.card,
.mat-card {
  max-width: 100%;
  max-height: 100%;
  box-sizing: border-box;
}

/* Prevent unwanted overflow */
.overflow-container {
  overflow: auto;
}

/* Properly size flex containers */
.d-flex {
  display: flex;
  flex-wrap: wrap;
}

/* General utility classes for spacing */
.p-0 { padding: 0 !important; }
.p-1 { padding: 0.25rem !important; }
.p-2 { padding: 0.5rem !important; }
.p-3 { padding: 1rem !important; }
.p-4 { padding: 1.5rem !important; }
.p-5 { padding: 3rem !important; }

.m-0 { margin: 0 !important; }
.m-1 { margin: 0.25rem !important; }
.m-2 { margin: 0.5rem !important; }
.m-3 { margin: 1rem !important; }
.m-4 { margin: 1.5rem !important; }
.m-5 { margin: 3rem !important; }

/* Container sizing */
.h-100 { height: 100% !important; }
.w-100 { width: 100% !important; }

/* Blueprint theme enhancements */
.blueprint-container {
  background-color: #f4f7fa;
  background-image: linear-gradient(rgba(25, 118, 210, 0.05) 1px, transparent 1px),
                    linear-gradient(90deg, rgba(25, 118, 210, 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
  padding: 20px;
  border: 1px solid rgba(25, 118, 210, 0.2);
  border-radius: 4px;
}

.blueprint-header {
  color: #1976d2;
  font-weight: 500;
  font-size: 1.25rem;
  margin-bottom: 1rem;
  border-bottom: 2px solid rgba(25, 118, 210, 0.3);
  padding-bottom: 0.5rem;
}

/* Card styling */
.blueprint-card {
  border: 1px solid rgba(25, 118, 210, 0.2);
  border-radius: 4px;
  padding: 1rem;
  margin-bottom: 1rem;
  background-color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

/* Scrollable containers */
.scrollable {
  overflow-y: auto;
  max-height: 100%;
}