// Move all @use rules to the very top, before any @import or other rules
@use 'sass:color';
@use './variables' as *;

// ==========================================================================
//   FORGEBOARD UTILITY CLASSES & MIXINS
// ==========================================================================

// Define missing font family variables
$font-family-monospace: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace !default;

// Fieldset label base placeholder
%fieldset-label-base {
  position: absolute;
  font-size: 0.7em;
  font-family: $font-family-monospace;
  padding: 0.1em 0.7em;
  border-radius: 1em;
  font-weight: bold;
  letter-spacing: 0.1em;
  opacity: 0.95;
  pointer-events: none;
  z-index: 10;
  border: 2px solid;
  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.05);
  background-color: $color-white;
}

// Placeholder for fieldset-like labels on containers
%fieldset-label-base {
  position: absolute;
  font-size: 0.7em;
  font-family: $font-family-monospace;
  background: none;
  padding: 0.1em 0.7em;
  border-radius: 1em;
  font-weight: bold;
  letter-spacing: 0.1em;
  opacity: 0.95;
  pointer-events: none;
  z-index: 10;
  border-width: 2px;
  border-style: solid;
  box-shadow: 0 2px 8px rgba(52,152,219,0.05); // Example shadow, adjust as needed
  transition: opacity 0.3s ease;

  // Default positioning, can be overridden
  left: 0.25em;
  bottom: 0.25em;
}

.blue-border {
  border: 1px solid $primary-color; // Use variable
  border-radius: 4px; // Consistent border-radius
}

.container-indicator {
  position: absolute;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  background: rgba($primary-color, 0.8); // Use variable with alpha
  color: $text-color-light;
  font-size: 12px;
  padding: 2px 6px;
  border-top-right-radius: 4px;
  z-index: 1; // Ensure it's above the container's content if needed

  mat-icon {
    font-size: 14px;
    width: 14px;
    height: 14px;
    margin-right: $spacing-xs;
  }
}

// Example status color mixin
@mixin status-colors($base-color) {
  background-color: rgba($base-color, 0.2);
  color: color.adjust($base-color, $lightness: -15%);
  border-left: 4px solid $base-color;
}

.status-healthy {
  @include status-colors($success-color);
}
.status-warning, .status-degraded {
  @include status-colors($warning-color);
}
.status-error, .status-unhealthy {
  @include status-colors($error-color);
}
.status-info {
  @include status-colors($info-color);
}
.status-unknown {
  @include status-colors($text-color-muted);
}

// Flexbox utilities
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

// Spacing utilities
.gap-xs { gap: $spacing-xs; }
.gap-sm { gap: $spacing-sm; }
.gap-md { gap: $spacing-md; }
.gap-lg { gap: $spacing-lg; }
.gap-xl { gap: $spacing-xl; }

.p-xs { padding: $spacing-xs; }
.p-sm { padding: $spacing-sm; }
.p-md { padding: $spacing-md; }
.p-lg { padding: $spacing-lg; }
.p-xl { padding: $spacing-xl; }

.m-xs { margin: $spacing-xs; }
.m-sm { margin: $spacing-sm; }
.m-md { margin: $spacing-md; }
.m-lg { margin: $spacing-lg; }
.m-xl { margin: $spacing-xl; }

// Text utilities
.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.font-mono { font-family: $font-family-monospace; }
.font-primary { font-family: $font-family-primary; }
.monospace {
  font-family: $font-family-monospace;
}

// Border utilities
.border-rounded-sm { border-radius: $border-radius-sm; }
.border-rounded-md { border-radius: $border-radius-md; }
.border-rounded-lg { border-radius: $border-radius-lg; }

// Shadow utilities
.shadow-card { box-shadow: $shadow-card; }
.shadow-hover { box-shadow: $shadow-hover; }
.shadow-drag { box-shadow: $shadow-drag; }

// Animation mixins
@mixin pulse($color: $primary-color) {
  animation: pulse-#{$color} 2s infinite;
  
  @keyframes pulse-#{$color} {
    0%, 100% {
      box-shadow: 0 0 0 0 rgba($color, 0.7);
    }
    50% {
      box-shadow: 0 0 0 10px rgba($color, 0);
    }
  }
}

@mixin hover-lift {
  transition: transform $transition-normal, box-shadow $transition-normal;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-hover;
  }
}

// Responsive mixins
@mixin mobile {
  @media (max-width: $breakpoint-mobile) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: $breakpoint-tablet) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $breakpoint-desktop) {
    @content;
  }
}
